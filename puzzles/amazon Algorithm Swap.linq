<Query Kind="Statements" />

/*
22 Mar 2021 - Amazon Assessment

Algorithm Swap
for a given sorting algorithm (the desc of the sorting algorithm was really wierd but I think it was just a bubble sort)
write a program to evaluate the algorithm by calculating the number of swaps necessary for a given array

I initially did this by implementing the algorith (or I think I did) and just counting each swap.
The test said this was too slow, so I wasted almost all of my remaining time trying to figure out a faster way.
The only improvement I came up with was to eliminate the actuall swap and just count how many values
further down in the array were less than the current value.
this appears to give the same answer and should be faster but the 
test still said it was too slow.

*/

//var a = new List<int>() { 7, 1, 2};
var a = new List<int>() { 542375936, 1, 612394571, 335780004, 661913604, 251396101, 618659849, 886483629, 327155730, 757596182, 362020888, 54525979, 801112095, 605334192, 211812393, 389808172, 854851629, 485228591, 492044339, 205258812, 78381117, 483917886, 373817415, 901775436, 229376081, 805306451, 250085461, 742129751, 982122511, 840171613, 236453983, 822870114, 351797347, 223608936, 85721193, 884473965, 151781489, 251920502, 829948025, 162005117, 106867392, 77594754, 658462059, 298582151, 195821710, 627572881, 767601347, 123994260, 580386965, 853803158, 645136535, 138150043, 33292446, 881852577, 111673506, 163578021, 152043686, 170655914, 350748844, 325320879, 734789809, 510918838, 236716216, 647233567, 927727804, 175636681, 889716938, 490995915, 583270609, 225706196, 930611416, 394037628, 227541212, 887051642, 771752158, 352059615, 7864549, 210239719, 589299947, 730857711, 971243760, 899678451, 85983273, 363856123, 679739648, 18612482, 43254021, 800325894, 460062991, 22806802, 535254403, 72614168, 608960559, 503054620, 375390498, 517996835, 512491817, 541589802, 12845358, 357302575, 190054704, 262406450, 413663542, 348651832, 97517886, 981729599, 299630912, 776732994, 64487748, 426246469, 775684422, 883425611, 770703692, 696254797, 386924879, 670040400, 529793361, 520094038, 565837174, 983302490, 65536348, 903348577, 437780834, 360710501, 42205545, 745013615, 119125229, 492831093, 320340342, 645704425, 735314296, 17388949, 671875457, 977273219, 641247980, 988021131, 613417357, 558934765, 297795985, 154665367, 105032431, 612368800, 595329441, 988545442, 267649446, 315097513, 547619244, 579600817, 446693810, 51380659, 963466654, 425460151, 723780029, 479461822, 660865477, 339739078, 578552264, 900465100, 419168717, 597485385, 535560655, 263717329, 479986130, 506462684, 609485283, 212074981, 309592550, 800326121, 400294378, 859046379, 509346284, 922485230, 279708145, 319291890, 885260787, 149160438, 481908137, 97518075, 413663742, 491258367, 760587510, 51380739, 526909957, 164181714, 436513537, 430527916, 728760843, 299106830, 429392399, 744751636, 463863897, 772538907, 898630172, 329777700, 820511276, 551289394, 4893450, 192414270, 796918337, 686555714, 341312068, 891814470, 267082474, 275776074, 111149644, 424936015, 864029419, 950783616, 607126103, 297009754, 330039904, 65536610, 400294499, 915145318, 690662161, 556794477, 866124398, 366740079, 609747568, 242745973, 686293623, 298114005, 903348862, 835453567, 526385792, 531628674, 650642052, 60511681, 36962955, 796131980, 943719054, 675021458, 581173907, 923533974, 694420119, 371983000, 529531548, 825229981, 335282846, 825492128, 715522160, 753402531, 163840678, 930874024, 887620265, 754188970, 148898483, 35652279, 536347321, 341050044, 29098691, 630981316, 803209925, 160432839, 943194827, 279184076, 299369166, 87032528, 484180690, 467315491, 989812174, 255765284, 483656410, 327942875, 793772766, 819725023, 697303776, 14156516, 469238501, 722207465, 82576106, 528905519, 675545213, 692060913, 393741043, 93760297, 683672312, 141296377, 48497404, 169083645, 937165566, 770966275, 180093700, 153092874, 514065163, 989856525, 567804688, 687560152, 723256083, 741081876, 755499800, 601210511, 373555997, 653263649, 567804706, 16689969, 481864498, 161967375, 467665721, 589824827, 777165141, 105382721, 817103682, 169345860, 639370058, 1049419, 168559437, 353370958, 554435409, 476840786, 820511571, 736101204, 866386775, 412615512, 698744975, 520094556, 209191773, 393479008, 641205089, 484705124, 917242725, 923534185, 493355882, 351011691, 44303216, 852755314, 904397683, 71041917, 536609662, 452723583, 139985795, 263044, 79167638, 872153991, 750519179, 527958924, 727450511, 854852498, 975438742, 996191044, 524813212, 154928031, 558629795, 128189349, 396886951, 53478312, 862708570, 506725295, 914359219, 690226100, 851444669, 800850880, 95683523, 605553608, 69731275, 367264719, 626787282, 314966179, 768607189, 626263005, 94897118, 23199909, 86246368, 756024291, 168034470, 330302438, 803210216, 590349289, 159122413, 319816686, 265552882, 652739572, 38798325, 277611510, 893649912, 770180093, 638583807, 59769857, 978584581, 12321798, 744227848, 988808201, 794602327, 258999308, 240649233, 224658450, 895134553, 154928156, 154666015, 319816736, 889717797, 370934822, 826015921, 236979242, 928732680, 488113202, 533506910, 652215350, 433062967, 336593979, 936553312, 914097219, 806092982, 411305036, 882158434, 938738766, 200016056, 393461541, 968885334, 64226395, 195690682, 379016720, 800851050, 651428974, 696255600, 449053809, 217142803, 737674358, 696473108, 232260732, 544788190, 255853697, 104596611, 212337803, 135791761, 482563609, 444604992, 389022873, 991954075, 188744860, 557319326, 149423264, 690488481, 365954211, 784990406, 349963430, 33074033, 696324336, 778568883, 501482676, 803210423, 972293305, 379323579, 419693763, 768038433, 853017801, 956826829, 851182798, 92538066, 891770403, 352584917, 169870551, 254543065, 861930716, 661914846, 118183461, 560989408, 458491105, 947913958, 333448430, 109839600, 148112628, 888145144, 270796026, 196609275, 629933311, 332180352, 369100035, 492045573, 86770950, 702589825, 987235597, 474219790, 361235729, 212600082, 968361237, 289146137, 129238299, 526297989, 253232416, 147064103, 195560746, 651953452, 92276014, 827852079, 469501232, 353895738, 850002143, 610796860, 92276031, 653132000, 451937603, 368051530, 598213963, 181405009, 695817785, 109839709, 506987871, 828114274, 73925987, 859571559, 689964392, 689964399, 525337969, 447481209, 857474428, 720635261, 260048254, 922486144, 682317376, 632597398, 496240006, 298583433, 115082634, 579863947, 738461070, 749775768, 141034898, 933758358, 499385751, 379061657, 741069406, 88606109, 908068255, 131203312, 162857758, 283903397, 514065832, 904136105, 431490477, 851707311, 734266801, 559941043, 920389044, 743179708, 388236735, 284689859, 184812997, 918816210, 205522389, 348128726, 891028954, 940574176, 55137872, 11011554, 44041700, 820250085, 717489638, 987497961, 54003178, 356517356, 443024877, 366478836, 900728309, 996410871, 714343930, 653306794, 513017343, 777782784, 896009730, 120280662, 849085958, 839560108, 738723344, 504628753, 291505682, 726664726, 962332189, 861931038, 127927841, 461899301, 799802919, 550241833, 222823981, 770704947, 673449525, 429917750, 168560185, 91751996, 849872448, 702895712, 32507458, 255329865, 918292042, 592709198, 370148943, 419432016, 118752849, 458491478, 570689114, 628360795, 567543390, 113772128, 581304592, 634390114, 790890087, 291767915, 423364206, 684459633, 754625470, 787744374, 346499321, 227804805, 191366792, 834668171, 761529996, 952895119, 241436309, 739772054, 838992153, 52168348, 228066973, 659818145, 853804706, 351928603, 989244358, 347080361, 466093740, 993789613, 369624750, 369100463, 506726064, 617088690, 837289653, 458491576, 838862521, 699401914, 819463869, 718276286, 248514243, 850396870, 790365895, 165152456, 482870985, 395839179, 695994060, 238028493, 834668239, 220464850, 278135075, 661915348, 286262997, 565446361, 118228705, 608437986, 353371875, 459015913, 747374314, 857212653, 955254511, 467271976, 832571124, 515812308, 26214698, 546309894, 557319944, 783025929, 520095498, 857474829, 317196046, 513541903, 251397906, 236717843, 939788052, 677119769, 917635375, 908012320, 944244512, 386926371, 541591332, 104597285, 507512615, 292816680, 637798185, 934631047, 842532658, 385877815, 191366974, 813696837, 489686855, 298583881, 800589646, 486541136, 497289041, 208930643, 708052821, 754057529, 887359325, 649332575, 383518568, 319293290, 484444013, 42993522, 454821755, 362022780, 848562052, 666896267, 923010961, 888670099, 677382037, 140248983, 781715353, 668155747, 322439071, 432277408, 124782499, 741083051, 902301612, 681052078, 549193647, 440403890, 990370823, 866650042, 818981877, 306448320, 286001089, 449578947, 272893893, 570689480, 718014412, 15816354, 945817553, 353896405, 226494422, 569378776, 212862937, 738989108, 115607519, 743440720, 28051427, 467666920, 392955881, 160696300, 620234734, 963905519, 117180402, 640681987, 819726340, 71172438, 219416583, 559417352, 736888844, 975177742, 91575981, 98568209, 563435182, 360712216, 392032643, 76023837, 594544672, 968886305, 945555491, 217843750, 158684849, 873988444, 722208811, 663488557, 944506926, 615778351, 663750704, 53217330, 757598259, 498075701, 161482809, 196085819, 653789245, 959449153, 777521218, 574883908, 208406597, 497289286, 599001159, 234358861, 314005176, 242223187, 395315284, 668993626, 707004509, 430442597, 194513001, 816580715, 854329454, 628560826, 169347184, 448006260, 596036421, 803997817, 592185466, 231080298, 490997887, 60033152, 209979522, 202115205, 986712204, 328468625, 86247571, 59508885, 492570782, 585107615, 683411616, 661653665, 437782692, 535038119, 669255849, 640944299, 746850476, 857213102, 967747534, 504105141, 113510582, 317720761, 30410945, 663750854, 979372235, 35915980, 726141133, 774899919, 938964583, 838338775, 843361316, 578816220, 780667103, 767035621, 675547366, 628623591, 984090856, 706480362, 808192239, 520945769, 807405819, 45877501, 358353150, 705693956, 656410887, 327827925, 287312141, 142608655, 200542482, 791937411, 965402878, 761530654, 514591008, 838600993, 20187436, 374248964, 210982621, 987760946, 773192306, 471075126, 521406777, 490211645, 154929470, 511707457, 286001475, 60557637, 603982151, 277875016, 609356944, 382643255, 682887500, 318769487, 253233493, 449533668, 515115359, 111413600, 812386660, 275253605, 881854823, 477104488, 253930556, 945293675, 505416044, 803034856, 135793014, 223086967, 813555392, 801900930, 135006601, 694159756, 457443725, 526387603, 391907740, 421267869, 347343262, 379672304, 881068450, 937691562, 69470638, 740559282, 521448521, 811600312, 337381823, 701237699, 399247812, 431753669, 424675788, 63179213, 246680015, 881772847, 404490706, 936380885, 365431258, 410782171, 765987292, 83973882, 122161631, 421530081, 476056035, 898894309, 33294822, 562563561, 136055277, 925456125, 151783920, 235670004, 273418743, 579865080, 735840768, 35654145, 860097029, 424151560, 871107081, 697305612, 855116311, 518390191, 928778788, 242485798, 97782315, 143395373, 186124847, 907282992, 998900148, 263195196, 262670914, 292817477, 292293192, 981205431, 458754637, 902040144, 181144155, 250350172, 840174177, 526125672, 42732138, 138676843, 332401261, 278661744, 733219442, 197397107, 634129014, 465046138, 707529339, 28052092, 242748032, 65014404, 958355222, 113233204, 566712087, 162531982, 796920463, 168037008, 80480913, 131074708, 398199445, 718277272, 70781596, 664799902, 492700101, 731556976, 530844322, 46140068, 547182364, 10750636, 824443336, 76548786, 353372851, 995101365, 382470838, 175114936, 823659196, 454298303, 73403072, 491522754, 192416456, 893389513, 995363538, 455346900, 394791637, 159910616, 697830108, 450888694, 169609951, 653527777, 889719526, 720374503, 461900523, 858524396, 208145135, 977799927, 95947514, 941886204, 103765802, 848562943, 189532931, 987761416, 370936588, 712510222, 156764943, 337644306, 248253208, 865602336, 417598243, 676334372, 824224903, 737413934, 217844527, 320080688, 284166977, 299371331, 960498503, 111414091, 291244878, 54004559, 685247313, 729025362, 214696419, 84937556, 902302550, 50596695, 476580696, 693440968, 384568155, 23858016, 951792702, 534252391, 7 };
//var a = new List<int>() { 542375936, 1, 612394571, 335780004, 661913604, 7, 362020888 };

Console.WriteLine($"{a.Count} -> {howManySwaps(new List<int>(a))} {howManySwaps2(new List<int>(a))}");

/*foreach (var i in a)
{
	Console.WriteLine(i);
}*/

long howManySwaps2(List<int> arr)
{
	long rc = 0;

	for (int i = 0; i < arr.Count - 1; i++)
	{
		for (int j = i + 1; j < arr.Count; j++)
		{
			int iv = arr[i], jv = arr[j];
			if (jv < iv)
			{
				rc++;
			}
		}
	}

	return rc;
}

long howManySwaps(List<int> arr)
{
	long rc = 0;

	for (int i = 0; i < arr.Count - 1; i++)
	{
		for (int j = i + 1; j < arr.Count; j++)
		{
			int iv = arr[i], jv = arr[j];
			if (jv < iv)
			{
				rc++;
				arr[i] = jv;
				arr[j] = iv;
			}
		}
	}

	return rc;
}